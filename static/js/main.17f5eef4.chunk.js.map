{"version":3,"sources":["App.tsx","index.tsx"],"names":["goodsFromServer","classSelect","App","state","selectedItems","selectItem","item","newItems","includes","filter","prod","push","setState","stating","this","selevted","length","slice","join","last","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"qPAGMA,EAA4B,CAChC,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAc,+CAOdC,E,4MACJC,MAAQ,CACNC,cAAe,CAAC,Q,EAGlBC,WAAa,SAACC,GACZ,IAAIC,EAAQ,YAAO,EAAKJ,MAAMC,eAE1BG,EAASC,SAASF,GACpBC,EAAWA,EAASE,QAAO,SAAAC,GAAI,OAAIA,IAASJ,KAE5CC,EAASI,KAAKL,GAGhB,EAAKM,SAAS,CAAER,cAAc,YAAKG,M,4CAGrC,WAAU,IAAD,OACDM,EAAUC,KAAKX,MAAMC,cACrBW,EAA8B,IAAnBF,EAAQG,OAAe,GAAvB,UAA+B,YAAIH,GAASI,MAAM,GAAI,GAAGC,KAAK,MAA9D,SACXC,EAAON,EAAQA,EAAQG,OAAS,GAEtC,OACE,sBAAKI,UAAU,MAAf,UACE,6BAAwB,IAAnBP,EAAQG,OAAe,oBAAvB,UAAgDD,GAAhD,OAA2DI,EAA3D,mBACL,wBACEE,KAAK,SACLD,UAAWnB,EACXqB,QAAS,kBAAM,EAAKV,SAAS,CAAER,cAAe,MAHhD,wBAOA,6BACGJ,EAAgBuB,KAAI,SAACC,GACpB,OACE,qBAEEJ,UAAWP,EAAQL,SAASgB,GAAQ,cAAgB,OAFtD,UAIE,6BAAKA,IACL,wBACEH,KAAK,SACLD,UAAWP,EAAQL,SAASgB,GAhDxB,6CAgDgDvB,EACpDqB,QAAS,kBAAM,EAAKjB,WAAWmB,IAHjC,SAKGX,EAAQL,SAASgB,GAAQ,SAAW,UATlCA,QAeZxB,EAAgBgB,c,GAnDPS,IAAMC,WAyDTxB,IC7EfyB,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.17f5eef4.chunk.js","sourcesContent":["import React from 'react';\nimport './App.scss';\n\nconst goodsFromServer: string[] = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst classSelect = 'btn btn-large waves-effect waves-light green';\nconst classUnSelect = 'btn btn-large waves-effect waves-light red';\n\ntype State = {\n  selectedItems: string[]\n};\n\nclass App extends React.Component<{}, State> {\n  state = {\n    selectedItems: ['Jam'],\n  };\n\n  selectItem = (item: string) => {\n    let newItems = [...this.state.selectedItems];\n\n    if (newItems.includes(item)) {\n      newItems = newItems.filter(prod => prod !== item);\n    } else {\n      newItems.push(item);\n    }\n\n    this.setState({ selectedItems: [...newItems] });\n  };\n\n  render() {\n    const stating = this.state.selectedItems;\n    const selevted = stating.length === 1 ? '' : `${[...stating].slice(0, -1).join(', ')} and `;\n    const last = stating[stating.length - 1];\n\n    return (\n      <div className=\"App\">\n        <h1>{stating.length === 0 ? 'No goods selected' : `${selevted}${last} are selected`}</h1>\n        <button\n          type=\"button\"\n          className={classSelect}\n          onClick={() => this.setState({ selectedItems: [] })}\n        >\n          Remove all\n        </button>\n        <ul>\n          {goodsFromServer.map((good: string) => {\n            return (\n              <li\n                key={good}\n                className={stating.includes(good) ? 'item active' : 'item'}\n              >\n                <h2>{good}</h2>\n                <button\n                  type=\"button\"\n                  className={stating.includes(good) ? classUnSelect : classSelect}\n                  onClick={() => this.selectItem(good)}\n                >\n                  {stating.includes(good) ? 'remove' : 'add'}\n                </button>\n              </li>\n            );\n          })}\n        </ul>\n        {goodsFromServer.length}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}